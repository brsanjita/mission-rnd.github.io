<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
<head>
  <script src="./../../assets/js/codemirror.js"></script>
  <link rel="stylesheet" href="./../../assets/css/codemirror.css">
  <script src="./../../assets/js/clike.js"></script>

  <script src="./../../assets/js/matchbrackets.js"></script>
  
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
  <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
</head>
<body class="container">

  <div> <h2> C-CODE Complexity</h2></div>
  <h4> You are expected to run main function in this lesson multiple times, for each function,play around with multiple inputs,Form random large samples of data,
   note down timings and report them in forum .We hope you learn in correct way. This is the reason we allocated 10 days for this lesson</h4>
  <p>How to do this lesson.<br />This lesson is not about passing testcases and submitting, Its about learning how to measure your code<br />how to find compelxity of your code and how to optimize your code etc. So dont just finish lesson asap, just by passing testcases,<br />Spend atleast 1-2 hours on each question finiding complexity,measuring time etc.</p>
  <p>1st Activity is TimeComplexity.cpp where you will be given 10-15 code samples, you need to find out what each code<br />complexity is.</p>
  <p>2) In PrimeNumber Testing you will write code in multiple ways to find whether a number is prime or not<br />and note down the performance measurements.</p>
  <p>The same thing you will do for other questions as well Search,TwoSum,NPrime etc.</p>
  <p>Solve questions in this order TimeComplexity,PrimeNumber,Search,TwoSum,NPrime.</p>
  <p>For each question there will be a observations comment box at top, fill it with your timings etc.</p>
  <p>The test cases are timed for optimized functions, if you get timeout exception ,you really need to think and optimize your code.</p>
  <p>Note :<br />If you give largeinputs to a bruteforce function it takes lot of time to execute. Think and Test.</p>
  <p>We are expecting timings like this for a sample question:</p>
  <p>Way1 : BruteForce :<br />100 loopCount, 1000 Elements. Time took : 50 seconds</p>
  <p>Way 2: Optimized :<br />1000 loopCount, 1000 Elements : Time took : 3seconds.</p>
  <p><br />Author: Abhijith Ravuri &amp; SVSRK Praveen </p>

  <h4>Helpful Links : (Go through these before starting lesson, Copy Paste links)</h4>
  <ul>
    
    <li>https://www.youtube.com/watch?v=PFd5s0bHgAQ</li>
    <li>https://www.hackerearth.com/practice/basic-programming/complexity-analysis/time-and-space-complexity/tutorial/</li>
    <li>http://discrete.gr/complexity/</li>
    <li>Robert Sedgewick's Algorithms(4th edition)</li>
  </ul>


</body>
</html>